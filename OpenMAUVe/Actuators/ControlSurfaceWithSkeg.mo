within OpenMAUVe.Actuators;
model ControlSurfaceWithSkeg "A model describing a movable surface generates lift, composed of a fixed skeg and a movable foil."

  import SI = Modelica.Units.SI;

  parameter Boolean enable_control_surfaces = true "Set to false for debugging";
  parameter Boolean show_frames_vehicles = false "Set to true for debugging";
  parameter Boolean show_shapes = false "Set to true for debugging";
  parameter Boolean show_forces_and_moments = false "Set to true for debugging";

  // Overall control surface
  parameter SI.Position r_skeg_origin[3] = {0.0, 0.0, 0.0} "Position of skeg origin wrt to {O_b}";
  parameter SI.Angle orientation_surface[3] = {0, 0, 0} "Orientation of the control surface wrt {O_b}";
  parameter Real alpha_0 = 0.0;
  parameter Real alpha_stall = 0.0;
  parameter Real C_L_alpha = 0.0;
  parameter Real C_L_stall = 0.0;
  parameter SI.Time fin_tau = 0.0 "Fin time constant [s]";


  // Movable fin
  parameter SI.Length fin_span = 0.0 "Span of the fin";
  parameter SI.Length fin_mean_chord = 0.0 "Mean chord of the fin";
  parameter SI.Length fin_thickness = 0.0 "Max thickness of the fin";
  parameter SI.Angle fin_max_deflection = 0.0 "Movable fin max deflection angle (positive rotation)";
  parameter SI.Angle fin_min_deflection = 0.0 "Movable fin min deflection angle (negative rotation)";

  parameter Integer fin_color[3] = {255, 165, 0} "Color of the skeg";

  parameter SI.Mass m_fin = 0.0 "Mass of the fin (in water!), if not lumped within the hull mass";
  parameter SI.Inertia I_fin_11 = 0.00 "(1,1) element of inertia tensor of the fin, if not lumped within the hull mass";
  parameter SI.Inertia I_fin_22 = 0.00 "(2,2) element of inertia tensor of the fin, if not lumped within the hull mass";
  parameter SI.Inertia I_fin_33 = 0.00 "(3,3) element of inertia tensor of the fin, if not lumped within the hull mass";
  parameter SI.Inertia I_fin_21 = 0.00 "(2,1) element of inertia tensor of the fin, if not lumped within the hull mass";
  parameter SI.Inertia I_fin_31 = 0.00 "(3,1) element of inertia tensor of the fin, if not lumped within the hull mass";
  parameter SI.Inertia I_fin_32 = 0.00 "(3,2) element of inertia tensor of the fin, if not lumped within the hull mass";

  // Fixed skeg
  parameter SI.Length skeg_span = 0.0 "Span of the skeg";
  parameter SI.Length skeg_mean_chord = 0.0 "Mean chord of the skeg";
  parameter SI.Length skeg_thickness = 0.0 "Max thickness of the skeg";
  parameter Integer skeg_color[3] = {255, 255, 0} "Color of the skeg";

  parameter SI.Mass m_skeg = 0.0 "Mass of the skeg (in water!), if not lumped within the hull mass";
  parameter SI.Inertia I_skeg_11 = 0.00 "(1,1) element of inertia tensor of the skeg, if not lumped within the hull mass";
  parameter SI.Inertia I_skeg_22 = 0.00 "(2,2) element of inertia tensor of the skeg, if not lumped within the hull mass";
  parameter SI.Inertia I_skeg_33 = 0.00 "(3,3) element of inertia tensor of the skeg, if not lumped within the hull mass";
  parameter SI.Inertia I_skeg_21 = 0.00 "(2,1) element of inertia tensor of the skeg, if not lumped within the hull mass";
  parameter SI.Inertia I_skeg_31 = 0.00 "(3,1) element of inertia tensor of the skeg, if not lumped within the hull mass";
  parameter SI.Inertia I_skeg_32 = 0.00 "(3,2) element of inertia tensor of the skeg, if not lumped within the hull mass";



  SI.Area A_fin "Surface area of the fin";
  SI.Area A_skeg "Surface area of the skeg";

  SI.Force finLiftForce "Lift force generated by the fin";
  Real C_L_current_fin "Lift coefficient (slope) selected based on angle of attack";
  Real C_L_fin "Lift coefficient";
  Real[3, 3] R_FB_fin; //rotation matrix: flow to body
  SI.Force skegLiftForce "Lift force generated by the skeg";
  Real C_L_current_skeg "Lift coefficient (slope) selected based on angle of attack";
  Real C_L_skeg "Lift coefficient";
  Real[3, 3] R_FB_skeg;   //rotation matrix: flow to body
  Real enable_control_surfaces_real; // a scalar multiplying the force
  
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_Ob annotation(
    Placement(transformation(origin = {-44, 18}, extent = {{186, -14}, {218, 18}}), iconTransformation(origin = {-62, -6}, extent = {{186, -12}, {218, 20}})));
  Modelica.Mechanics.MultiBody.Forces.WorldForce force_fin(resolveInFrame = Modelica.Mechanics.MultiBody.Types.ResolveInFrameB.frame_b, color = {255, 0, 255}, animation = show_forces_and_moments) annotation(
    Placement(transformation(origin = {-132, 20}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Parts.FixedRotation skeg_origin_pose(animation = false, r = {r_skeg_origin[1], r_skeg_origin[2], r_skeg_origin[3]}, rotationType = Modelica.Mechanics.MultiBody.Types.RotationTypes.PlanarRotationSequence, angles = Modelica.Units.Conversions.to_deg(orientation_surface)) annotation(
    Placement(transformation(origin = {74, 20}, extent = {{-10, -10}, {10, 10}}, rotation = 180)));
  Modelica.Mechanics.MultiBody.Parts.Body bodySkeg(animation = false, r_CM = {0, 0, 0}, m = m_skeg, I_11 = I_skeg_11, I_22 = I_skeg_22, I_33 = I_skeg_33, I_21 = I_skeg_21, I_31 = I_skeg_31, I_32 = I_skeg_32) annotation(
    Placement(transformation(origin = {98, 76}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Visualizers.FixedFrame frameOriginSkeg(animation = show_frames_vehicles, color_y = {255, 0, 255}, color_z = {255, 0, 255}, length = 0.5, color_x = {255, 0, 255})  annotation(
    Placement(transformation(origin = {86, 102}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Visualizers.FixedShape shapeSkeg(shapeType = "box", color = skeg_color, length = skeg_mean_chord, width = skeg_span, height = skeg_thickness, r_shape = {-skeg_mean_chord, skeg_span/2, 0}, animation = show_shapes) annotation(
    Placement(transformation(origin = {88, 144}, extent = {{-10, -10}, {10, 10}})));
  Sensors.SignalBus signalBus annotation(
    Placement(transformation(origin = {2, -153}, extent = {{-24, -17}, {24, 17}}), iconTransformation(origin = {10, -136}, extent = {{-28, -28}, {28, 28}})));
  Modelica.Blocks.Math.Gain rho(k = 1) annotation(
    Placement(transformation(origin = {-94, -114}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Math.Gain flowspeed(k = 1) annotation(
    Placement(transformation(origin = {-36, -114}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Math.Gain alpha(k = 1) annotation(
    Placement(transformation(origin = {40, -112}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Math.Gain beta(k = 1) annotation(
    Placement(transformation(origin = {84, -110}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation fromSkegOriginFrameToSkegLiftFrame(r = {-skeg_mean_chord/4, skeg_span/2*sign(r_skeg_origin[2]), 0.0}, animation = false)  annotation(
    Placement(transformation(origin = {-4, 106}, extent = {{-10, -10}, {10, 10}}, rotation = 180)));
  Modelica.Mechanics.MultiBody.Visualizers.FixedFrame frameLiftSkeg(animation = show_frames_vehicles, color_x = {114, 47, 55}, color_y = {114, 47, 55}, color_z = {114, 47, 55}, length = 0.5) annotation(
    Placement(transformation(origin = {-84, 136}, extent = {{-10, -10}, {10, 10}}, rotation = 180)));
  Modelica.Mechanics.MultiBody.Forces.WorldForce force_skeg(animation = show_forces_and_moments, color = {255, 0, 255}, resolveInFrame = Modelica.Mechanics.MultiBody.Types.ResolveInFrameB.frame_b) annotation(
    Placement(transformation(origin = {-80, 106}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Parts.Body bodyFin(I_11 = I_fin_11, I_21 = I_fin_21, I_22 = I_fin_22, I_31 = I_fin_31, I_32 = I_fin_32, I_33 = I_fin_33, animation = false, m = m_fin, r_CM = {0, 0, 0}) annotation(
    Placement(transformation(origin = {-44, 50}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation fromSkegOriginFrameToFinJointFrame(animation = false, r = {-skeg_mean_chord, 0.0, 0.0}) annotation(
    Placement(transformation(origin = {16, 20}, extent = {{-10, -10}, {10, 10}}, rotation = 180)));
  Modelica.Mechanics.MultiBody.Visualizers.FixedFrame frameOriginFin(animation = show_frames_vehicles, color_x = {136, 231, 136}, color_y = {136, 231, 136}, color_z = {136, 231, 136}, length = 0.5) annotation(
    Placement(transformation(origin = {-82, 74}, extent = {{-10, -10}, {10, 10}}, rotation = 180)));
  Modelica.Mechanics.MultiBody.Visualizers.FixedShape shapeFin( color = fin_color, height = fin_thickness, length = fin_mean_chord, r_shape = {0.0, fin_span/2, 0}, shapeType = "box", width = fin_span, lengthDirection = {-1.0, 0.0, 0.0}, animation = show_shapes) annotation(
    Placement(transformation(origin = {-42, 74}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation fromFinOriginFrameToFinLiftFrame(animation = false, r = {-fin_mean_chord/4, fin_span/2*sign(r_skeg_origin[2]), 0.0}) annotation(
    Placement(transformation(origin = {-86, 20}, extent = {{-10, -10}, {10, 10}}, rotation = 180)));
  Modelica.Mechanics.MultiBody.Visualizers.FixedFrame frameLiftFin(animation = show_frames_vehicles, color_x = {6, 64, 43}, color_y = {6, 64, 43}, color_z = {6, 64, 43}, length = 0.5) annotation(
    Placement(transformation(origin = {-136, -12}, extent = {{-10, -10}, {10, 10}}, rotation = 180)));
  Modelica.Blocks.Interfaces.RealInput in_fin_deflection annotation(
    Placement(transformation(origin = {-144, -74}, extent = {{-20, -20}, {20, 20}}), iconTransformation(origin = {-164, -2}, extent = {{-20, -20}, {20, 20}})));
  Modelica.Mechanics.Rotational.Sources.Position fin_deflection_after_sat_applied(w(fixed = true)) annotation(
    Placement(transformation(origin = {71, -93}, extent = {{-38, 10}, {-18, 30}})));
  Modelica.Blocks.Nonlinear.Limiter fin_deflection_saturated(uMax = fin_max_deflection, uMin = fin_min_deflection) annotation(
    Placement(transformation(origin = {-57, -73}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Blocks.Math.UnitConversions.From_deg in_fin_deflection_deg_to_rad annotation(
    Placement(transformation(origin = {-96, -74}, extent = {{-9, -9}, {9, 9}})));
  Modelica.Blocks.Math.UnitConversions.To_deg fin_deflection_saturated_to_deg annotation(
    Placement(transformation(origin = {24, -38}, extent = {{-7, -7}, {7, 7}})));
  Modelica.Mechanics.MultiBody.Joints.Revolute revolute_join_fin(animation = show_frames_vehicles, n(each displayUnit = "1") = {0, 1, 0}, useAxisFlange = true) annotation(
    Placement(transformation(origin = {-13, 0}, extent = {{-4, -30}, {16, -10}}, rotation = 180)));
  Modelica.Blocks.Continuous.FirstOrder fin_dynamics(T = fin_tau)  annotation(
    Placement(transformation(origin = {-18, -72}, extent = {{-10, -10}, {10, 10}})));
equation


  if enable_control_surfaces == true then 
    enable_control_surfaces_real = 1.0;
  else 
    enable_control_surfaces_real = 0.0;
  end if;

// Calculation relative to the skeg
  A_skeg = skeg_span*skeg_mean_chord;
  if abs(alpha.y) < alpha_stall then
// wing not stalling
    C_L_current_skeg = C_L_skeg;
  else
// wing stalling
    C_L_current_skeg = C_L_skeg;
  end if;
  C_L_skeg = C_L_current_skeg*alpha.y + alpha_0;
// value of the lift coefficient based on the current angle of attack
  skegLiftForce = 0.5*rho.y*A_skeg*C_L_skeg*flowspeed.y^2;
// rotation from flow frame to body frame (ref #72, page 51 and page 82)
  R_FB_skeg = [cos(alpha.y)*cos(beta.y), -cos(alpha.y)*sin(beta.y), -sin(alpha.y); sin(beta.y), cos(beta.y), 0; sin(alpha.y)*cos(beta.y), -sin(alpha.y)*sin(beta.y), cos(alpha.y)];
  
  force_skeg.force = R_FB_skeg*{0.0, 0.0, -skegLiftForce}*enable_control_surfaces_real;
  // expressing the force in the body fixed frame
  //force_skeg.force = R_FB*{0.0, 0.0, -20.0};


// Calculation relative to the movable fin
  A_fin = fin_span*fin_mean_chord;
  if abs(alpha.y + in_fin_deflection) < alpha_stall then
// wing not stalling
    C_L_current_fin = C_L_alpha;
  else
// wing stalling
    C_L_current_fin = C_L_stall;
  end if;
  C_L_fin = C_L_current_fin*(alpha.y + in_fin_deflection) + alpha_0;
// value of the lift coefficient based on the current angle of attack
  finLiftForce = 0.5*rho.y*A_fin*C_L_fin*flowspeed.y^2;
// rotation from flow frame to body frame (ref #72, page 51 and page 82)
  R_FB_fin = [cos(alpha.y)*cos(beta.y), -cos(alpha.y)*sin(beta.y), -sin(alpha.y); sin(beta.y), cos(beta.y), 0; sin(alpha.y)*cos(beta.y), -sin(alpha.y)*sin(beta.y), cos(alpha.y)];


  
      
  // expressing the force in the body fixed frame
  //force_fin.force = R_FB*{0.0, 0.0, -20.0};
  force_fin.force = R_FB_fin*{0.0, 0.0, -finLiftForce}*enable_control_surfaces_real;
  
    
  connect(bodySkeg.frame_a, skeg_origin_pose.frame_b) annotation(
    Line(points = {{88, 76}, {41, 76}, {41, 20}, {64, 20}}, color = {95, 95, 95}));
  connect(frameOriginSkeg.frame_a, skeg_origin_pose.frame_b) annotation(
    Line(points = {{76, 102}, {38, 102}, {38, 20}, {64, 20}}, color = {95, 95, 95}));
  connect(skeg_origin_pose.frame_a, frame_Ob) annotation(
    Line(points = {{84, 20}, {158, 20}}, color = {95, 95, 95}));
  connect(signalBus.rho, rho.u) annotation(
    Line(points = {{2, -153}, {2, -133}, {-94, -133}, {-94, -126}}, color = {0, 0, 127}));
  connect(signalBus.flowspeed, flowspeed.u) annotation(
    Line(points = {{2, -153}, {2, -134}, {-36, -134}, {-36, -127}}, color = {0, 0, 127}));
  connect(signalBus.alpha, alpha.u) annotation(
    Line(points = {{2, -153}, {2, -133}, {40, -133}, {40, -125}}, color = {0, 0, 127}));
  connect(signalBus.beta, beta.u) annotation(
    Line(points = {{2, -153}, {2, -133}, {84, -133}, {84, -123}}, color = {0, 0, 127}));
  connect(fromSkegOriginFrameToSkegLiftFrame.frame_a, skeg_origin_pose.frame_b) annotation(
    Line(points = {{6, 106}, {39, 106}, {39, 20}, {64, 20}}, color = {95, 95, 95}));
  connect(force_skeg.frame_b, fromSkegOriginFrameToSkegLiftFrame.frame_b) annotation(
    Line(points = {{-70, 106}, {-14, 106}}, color = {95, 95, 95}));
  connect(shapeSkeg.frame_a, skeg_origin_pose.frame_b) annotation(
    Line(points = {{78, 144}, {34, 144}, {34, 20}, {64, 20}}, color = {95, 95, 95}));
  connect(frameLiftSkeg.frame_a, force_skeg.frame_b) annotation(
    Line(points = {{-74, 136}, {-32, 136}, {-32, 106}, {-70, 106}}, color = {95, 95, 95}));
  connect(fromSkegOriginFrameToFinJointFrame.frame_a, skeg_origin_pose.frame_b) annotation(
    Line(points = {{26, 20}, {64, 20}}, color = {95, 95, 95}));
  connect(force_fin.frame_b, fromFinOriginFrameToFinLiftFrame.frame_b) annotation(
    Line(points = {{-122, 20}, {-96, 20}}, color = {95, 95, 95}));
  connect(frameLiftFin.frame_a, fromFinOriginFrameToFinLiftFrame.frame_b) annotation(
    Line(points = {{-126, -12}, {-112, -12}, {-112, 20}, {-96, 20}}, color = {95, 95, 95}));
  connect(revolute_join_fin.frame_a, fromSkegOriginFrameToFinJointFrame.frame_b) annotation(
    Line(points = {{-8, 20}, {6, 20}}, color = {95, 95, 95}));
  connect(fin_deflection_after_sat_applied.flange, revolute_join_fin.axis) annotation(
    Line(points = {{53, -73}, {66, -73}, {66, -8}, {-19, -8}, {-19, 10}, {-18, 10}}));
  connect(fin_dynamics.y, fin_deflection_after_sat_applied.phi_ref) annotation(
    Line(points = {{-7, -72}, {32, -72}}, color = {0, 0, 127}));
  connect(fin_deflection_saturated_to_deg.u, fin_dynamics.y) annotation(
    Line(points = {{16, -38}, {8, -38}, {8, -72}, {-7, -72}}, color = {0, 0, 127}));
  connect(in_fin_deflection, in_fin_deflection_deg_to_rad.u) annotation(
    Line(points = {{-144, -74}, {-106, -74}}, color = {0, 0, 127}));
  connect(in_fin_deflection_deg_to_rad.y, fin_deflection_saturated.u) annotation(
    Line(points = {{-86, -74}, {-76, -74}, {-76, -73}, {-69, -73}}, color = {0, 0, 127}));
  connect(fin_deflection_saturated.y, fin_dynamics.u) annotation(
    Line(points = {{-46, -73}, {-34, -73}, {-34, -72}, {-30, -72}}, color = {0, 0, 127}));
  connect(frameOriginFin.frame_a, bodyFin.frame_a) annotation(
    Line(points = {{-72, 74}, {-68, 74}, {-68, 50}, {-54, 50}}, color = {95, 95, 95}));
  connect(shapeFin.frame_a, bodyFin.frame_a) annotation(
    Line(points = {{-52, 74}, {-62, 74}, {-62, 50}, {-54, 50}}, color = {95, 95, 95}));
  connect(fromFinOriginFrameToFinLiftFrame.frame_a, revolute_join_fin.frame_b) annotation(
    Line(points = {{-76, 20}, {-28, 20}}, color = {95, 95, 95}));
  connect(bodyFin.frame_a, revolute_join_fin.frame_b) annotation(
    Line(points = {{-54, 50}, {-62, 50}, {-62, 20}, {-28, 20}}, color = {95, 95, 95}));
  annotation(
    Icon(coordinateSystem(preserveAspectRatio = false, extent = {{-150, -150}, {150, 150}}), graphics = {Text(origin = {12, 121}, extent = {{-96, 35}, {96, -35}}, textString = "Control surface"), Text(origin = {196, 53}, extent = {{-54, 23}, {54, -23}}, textString = "{O_b}"), Bitmap(origin = {-3, -13}, extent = {{-209, -121}, {209, 121}}, imageSource = "")}),
    Diagram(coordinateSystem(preserveAspectRatio = false, extent = {{-150, -150}, {150, 150}})));
end ControlSurfaceWithSkeg;