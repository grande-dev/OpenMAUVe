/* Simulation code for Glider_Lib_Modelica_ROS.GenericGlider_mass_explicit generated by the OpenModelica Compiler OpenModelica 1.17.0~5-gb8b118d. */
#if !defined(Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit__MODEL_H)
#define Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit__MODEL_H

#include "openmodelica.h"
#include "openmodelica_func.h"
#include "simulation_data.h"
#include "simulation/simulation_info_json.h"
#include "simulation/simulation_runtime.h"
#include "util/omc_error.h"
#include "util/parallel_helper.h"
#include "simulation/solver/model_help.h"
#include "simulation/solver/delay.h"
#include "simulation/solver/linearSystem.h"
#include "simulation/solver/nonlinearSystem.h"
#include "simulation/solver/mixedSystem.h"

#if defined(__cplusplus)
extern "C" {
#endif

#include <string.h>

#include "Glider_Lib_Modelica_ROS.GenericGlider_mass_explicit_functions.h"

#define Modelica_Math_Vectors_length_index 0
#define Modelica_Math_Vectors_norm_index 1
#define Modelica_Math_Vectors_normalize_index 2
#define Modelica_Mechanics_MultiBody_Frames_Orientation_index 3
#define Modelica_Mechanics_MultiBody_Frames_axesRotationsAngles_index 4
#define Modelica_Mechanics_MultiBody_Frames_planarRotationAngle_index 5
#define Modelica_Mechanics_MultiBody_Frames_resolve2_index 6
#define Modelica_Mechanics_MultiBody_Frames_TransformationMatrices_from__nxy_index 7
#define Modelica_Mechanics_MultiBody_Frames_TransformationMatrices_planarRotation_index 8
#define Modelica_Mechanics_MultiBody_Frames_TransformationMatrices_resolve1_index 9
#define Modelica_Mechanics_MultiBody_Frames_TransformationMatrices_resolve2_index 10

extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_callExternalObjectDestructors(DATA *_data, threadData_t *threadData);
#if !defined(OMC_NUM_NONLINEAR_SYSTEMS) || OMC_NUM_NONLINEAR_SYSTEMS>0
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialNonLinearSystem(int nNonLinearSystems, NONLINEAR_SYSTEM_DATA *data);
#endif
#if !defined(OMC_NUM_LINEAR_SYSTEMS) || OMC_NUM_LINEAR_SYSTEMS>0
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialLinearSystem(int nLinearSystems, LINEAR_SYSTEM_DATA *data);
#endif
#if !defined(OMC_NUM_MIXED_SYSTEMS) || OMC_NUM_MIXED_SYSTEMS>0
#endif
#if !defined(OMC_NO_STATESELECTION)
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initializeStateSets(int nStateSets, STATE_SET_DATA* statesetData, DATA *data);
#endif
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionAlgebraics(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_storeDelayed(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_updateBoundVariableAttributes(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionInitialEquations(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionInitialEquations_lambda0(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionRemovedInitialEquations(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_updateBoundParameters(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_checkForAsserts(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_ZeroCrossingsEquations(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_ZeroCrossings(DATA *data, threadData_t *threadData, double* gout);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_updateRelations(DATA *data, threadData_t *threadData, int evalZeroCross);
extern const char* Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_zeroCrossingDescription(int i, int **out_EquationIndexes);
extern const char* Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_relationDescription(int i);
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_initSample(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialAnalyticJacobianG(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialAnalyticJacobianA(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialAnalyticJacobianB(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialAnalyticJacobianC(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialAnalyticJacobianD(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initialAnalyticJacobianF(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionJacG_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionJacA_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionJacB_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionJacC_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionJacD_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionJacF_column(void* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern const char* Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_linear_model_frame(void);
extern const char* Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_linear_model_datarecovery_frame(void);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_mayer(DATA* data, modelica_real** res, short *);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_lagrange(DATA* data, modelica_real** res, short *, short *);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_pickUpBoundsForInputsInOptimization(DATA* data, modelica_real* min, modelica_real* max, modelica_real*nominal, modelica_boolean *useNominal, char ** name, modelica_real * start, modelica_real * startTimeOpt);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_setInputData(DATA *data, const modelica_boolean file);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_getTimeGrid(DATA *data, modelica_integer * nsi, modelica_real**t);
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_initSynchronous(DATA * data, threadData_t *threadData);
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_updateSynchronous(DATA * data, threadData_t *threadData, long i);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_equationsSynchronous(DATA * data, threadData_t *threadData, long i);
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_read_input_fmu(MODEL_DATA* modelData, SIMULATION_INFO* simulationData);
extern void Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_function_savePreSynchronous(DATA *data, threadData_t *threadData);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_inputNames(DATA* data, char ** names);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_dataReconciliationInputNames(DATA* data, char ** names);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_initializeDAEmodeData(DATA *data, DAEMODE_DATA*);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_functionLocalKnownVars(DATA*, threadData_t*);
extern int Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit_symbolicInlineSystem(DATA*, threadData_t*);

#include "Glider_Lib_Modelica_ROS.GenericGlider_mass_explicit_literals.h"




#if defined(HPCOM) && !defined(_OPENMP)
  #error "HPCOM requires OpenMP or the results are wrong"
#endif
#if defined(_OPENMP)
  #include <omp.h>
#else
  /* dummy omp defines */
  #define omp_get_max_threads() 1
#endif

#if defined(__cplusplus)
}
#endif

#endif /* !defined(Glider_Lib_Modelica_ROS_GenericGlider_mass_explicit__MODEL_H) */


