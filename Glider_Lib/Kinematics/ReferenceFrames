within Glider_Lib.Kinematics;

model ReferenceFrames
  import SI = Modelica.Units.SI;


  parameter Modelica.Units.SI.Angle euler_0[3] = {0, 0, 0} "Initial attitude angles for hull wrt to NED around 'sequence_start' axes into frame_b";
  parameter Modelica.Units.SI.AngularVelocity w_0[3] = {0, 0, 0} "Initial or guess values of angular velocity of frame_a resolved in world frame";
  
  
  // NED position
  parameter SI.Angle NED_latitude=0.488484 "Initial NED latitude (phi)";
  parameter SI.Angle NED_longitude=-0.268186 "Initial NED longitude (lambda)";
  parameter SI.Position a_earth = 6378137.0 "Earth's semimajor axis"; // #645 page 25
  parameter Real e_earth = 0.0818191908426 "Earth's eccentricity";  // #645 page 25
  
  Real NED_init_pos_x; 
  Real NED_init_pos_y; 
  Real NED_init_pos_z; 
  Real[3] NED_init_attitude_rad; // chosen convention 3,2,1
  Real[3] NED_init_attitude_deg; // chosen convention 3,2,1

  
  Real N_ned "Prime vertical radius of curvature"; // #645 page 28
  parameter SI.Position h_ned = 0 "Geodetic height: height above the spheroid above the normal"; // #645 page 26
  
  //Real[3] pos_NED; // position in NED frame
  //Real[3] pos_ECEF; // position in ECEF frame
  Real[3, 3] R_E_to_N;
  //rotation matrix: ECEF to NED
  
  
  //components of hydrodynamic forces and torques
  Modelica.Mechanics.MultiBody.Visualizers.FixedFrame frame_ECI(length = 1.0, color_x = {199, 55, 36}, color_y = {199, 55, 36}, color_z = {199, 55, 36}, specularCoefficient = 0) annotation(
    Placement(transformation(origin = {90, 80}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Joints.Revolute revolute(useAxisFlange = true)  annotation(
    Placement(transformation(origin = {-34, -34}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.Rotational.Sources.ConstantSpeed constantSpeed(w_fixed = 7.2921150e-5)  annotation(
    Placement(transformation(origin = {-58, 2}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Visualizers.FixedFrame frame_ECEF(length = 0.6, color_x = {13, 163, 48}, color_y = {13, 163, 48}, color_z = {13, 163, 48}, specularCoefficient = 0.1)  annotation(
    Placement(transformation(origin = {90, 30}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Parts.FixedRotation fixedRotation(rotationType = Modelica.Mechanics.MultiBody.Types.RotationTypes.PlanarRotationSequence, sequence = {3, 2, 1}, angles = {-15.3659, -117.998, 0}, r = {5.43/5, -1.49/5, 2.97/5}, animation = false)  annotation(
    Placement(transformation(origin = {10, -34}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Visualizers.FixedFrame frame_NED(length = 0.4, color_x = {0, 0, 227}, color_y = {0, 0, 227}, color_z = {0, 0, 227}, specularCoefficient = 0.1)  annotation(
    Placement(transformation(origin = {90, -34}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_a annotation(
    Placement(transformation(origin = {-100, 26}, extent = {{-16, -16}, {16, 16}}), iconTransformation(origin = {-104, 2}, extent = {{-16, -16}, {16, 16}})));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_eci annotation(
    Placement(transformation(origin = {96, 60}, extent = {{-16, -16}, {16, 16}}), iconTransformation(origin = {96, 82}, extent = {{-16, -16}, {16, 16}})));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_ece annotation(
    Placement(transformation(origin = {96, 4}, extent = {{-16, -16}, {16, 16}}), iconTransformation(origin = {96, 2}, extent = {{-16, -16}, {16, 16}})));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_ned annotation(
    Placement(transformation(origin = {96, -60}, extent = {{-16, -16}, {16, 16}}), iconTransformation(origin = {96, -82}, extent = {{-16, -16}, {16, 16}})));
  Modelica.Mechanics.MultiBody.Joints.FreeMotion freeMotion(r_rel_a(start = {0, 0, 0}, each fixed = true), v_rel_a(each fixed = true), animation = false, angles_fixed = true, angles_start = euler_0, sequence_start = {3, 2, 1}, w_rel_a_fixed = true, w_rel_a_start = w_0)  annotation(
    Placement(transformation(origin = {46, -92}, extent = {{-10, -10}, {10, 10}})));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_to_Ob annotation(
    Placement(transformation(origin = {94, -92}, extent = {{-16, -16}, {16, 16}}), iconTransformation(origin = {-2, -102}, extent = {{-16, -16}, {16, 16}}, rotation = -90)));
equation
  N_ned = a_earth/sqrt(1 - e_earth^2*(sin(NED_latitude))^2);
// #645 page 28
  NED_init_pos_x = (N_ned + h_ned)*cos(NED_latitude)*cos(NED_longitude);
// #645 page 29
  NED_init_pos_y = (N_ned + h_ned)*cos(NED_latitude)*sin(NED_longitude);
  NED_init_pos_z = (N_ned*(1 - e_earth^2) + h_ned)*sin(NED_latitude);
  R_E_to_N = [-sin(NED_latitude)*cos(NED_longitude), -sin(NED_latitude)*sin(NED_longitude), cos(NED_latitude); -sin(NED_longitude), cos(NED_longitude), 0; -cos(NED_latitude)*cos(NED_longitude), -cos(NED_latitude)*sin(NED_longitude), -sin(NED_latitude)];
  NED_init_attitude_rad[1] = NED_longitude;
//rotation around z
  NED_init_attitude_rad[2] = -Modelica.Constants.pi/2 - NED_latitude;
//rotation around y'
  NED_init_attitude_rad[3] = 0;
// rotation around x''
  NED_init_attitude_deg = Modelica.Units.Conversions.to_deg(NED_init_attitude_rad);
  connect(constantSpeed.flange, revolute.axis) annotation(
    Line(points = {{-48, 2}, {-48, 0}, {-34, 0}, {-34, -24}}));
  connect(fixedRotation.frame_b, frame_NED.frame_a) annotation(
    Line(points = {{20, -34}, {80, -34}}, color = {95, 95, 95}));
  connect(revolute.frame_b, frame_ECEF.frame_a) annotation(
    Line(points = {{-24, -34}, {-12, -34}, {-12, 30}, {80, 30}}, color = {95, 95, 95}));
  connect(fixedRotation.frame_a, revolute.frame_b) annotation(
    Line(points = {{0, -34}, {-24, -34}}, color = {95, 95, 95}));
  connect(frame_a, revolute.frame_a) annotation(
    Line(points = {{-100, 26}, {-78, 26}, {-78, -34}, {-44, -34}}));
  connect(frame_ECI.frame_a, frame_a) annotation(
    Line(points = {{80, 80}, {-78, 80}, {-78, 26}, {-100, 26}}, color = {95, 95, 95}));
  connect(frame_eci, frame_ECI.frame_a) annotation(
    Line(points = {{96, 60}, {60, 60}, {60, 80}, {80, 80}}));
  connect(frame_ece, frame_ECEF.frame_a) annotation(
    Line(points = {{96, 4}, {56, 4}, {56, 30}, {80, 30}}));
  connect(frame_ned, frame_NED.frame_a) annotation(
    Line(points = {{96, -60}, {60, -60}, {60, -34}, {80, -34}}));
  connect(freeMotion.frame_a, frame_NED.frame_a) annotation(
    Line(points = {{36, -92}, {18, -92}, {18, -60}, {60, -60}, {60, -34}, {80, -34}}, color = {95, 95, 95}));
  connect(freeMotion.frame_b, frame_to_Ob) annotation(
    Line(points = {{56, -92}, {94, -92}}, color = {95, 95, 95}));
  annotation(
    Icon(coordinateSystem(preserveAspectRatio = false), graphics = {Text(origin = {-72, 1}, extent = {{-20, 13}, {20, -13}}, textString = "gravity"), Text(origin = {49, 81}, extent = {{-31, 13}, {31, -13}}, textString = "{O_i}"), Text(origin = {47, 1}, extent = {{-31, 13}, {31, -13}}, textString = "{O_e}"), Text(origin = {49, -79}, extent = {{-31, 13}, {31, -13}}, textString = "{O_n}")}),
    Diagram(coordinateSystem(preserveAspectRatio = false)));
end ReferenceFrames;
